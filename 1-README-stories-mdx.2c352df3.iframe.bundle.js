/*! For license information please see 1-README-stories-mdx.2c352df3.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkreact_storage_complete=self.webpackChunkreact_storage_complete||[]).push([[836],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Ck:()=>withMDXComponents,Eh:()=>MDXContext,Iu:()=>MDXProvider,MN:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Qb:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Qb});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./src/stories/core/1.README.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>_1_README_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks_dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const READMEraw_namespaceObject='<h2 align="center">\n  🗄️ React Storage Complete\n</h2>\n<h3 align="center">\n  React hooks for accessing localStorage and sessionStorage, with syncing and prefix support. The complete package.\n</h3>\n<p align="center">\n  <a href="https://badge.fury.io/js/react-storage-complete" target="_blank" rel="noopener noreferrer"><img src="https://badge.fury.io/js/react-storage-complete.svg" alt="npm Version" /></a>&nbsp;\n  <a href="https://github.com/justinmahar/react-storage-complete/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/GitHub-Source-success" alt="View project on GitHub" /></a>&nbsp;\n  <a href="https://github.com/justinmahar/react-storage-complete/actions?query=workflow%3ADeploy" target="_blank" rel="noopener noreferrer"><img src="https://github.com/justinmahar/react-storage-complete/workflows/Deploy/badge.svg" alt="Deploy Status" /></a>\n</p>\n\x3c!-- [lock:donate-badges] 🚫--------------------------------------- --\x3e\r\n<p align="center">\r\n  <a href="https://ko-fi.com/justinmahar"><img src="https://img.shields.io/static/v1?label=Buy%20me%20a%20coffee&message=%E2%9D%A4&logo=KoFi&color=%23fe8e86" alt="Buy me a coffee" /></a>&nbsp;<a href="https://github.com/sponsors/justinmahar" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="Sponsor"/></a>\r\n</p>\r\n\x3c!-- [/lock:donate-badges] ---------------------------------------🚫 --\x3e\r\n\n## Documentation\n\nRead the **[official documentation](https://justinmahar.github.io/react-storage-complete/)**.\n\n[**👁️ Live Demo**](https://justinmahar.github.io/react-storage-complete/?path=/story/stories-web-storage--local-storage)\n\n## Overview\n\nHooks for easily accessing `localStorage` and `sessionStorage`, with a similar interface to `React.useState()`.\n\n### Features include:\n\n- **🔄 Automatic state synchronization**\n  - Changes are synchronized across hooks, and even different browser tabs, automatically.\n- **👨‍👩‍👧‍👦 Namespacing using prefixes**\n  - Easily scope your stored data with namespaces. Great for managing data for multiple users.\n- **🔢 Support for primitives and objects**\n  - Store and retrieve strings, booleans, numbers, and objects effortlessly.\n- **👾 Customizable**\n  - Want to store something unusual? Just provide your own encoder and decoder.\n- **💁 Default values**\n  - Optional support for defaults is baked right in.\n\n\x3c!-- [lock:donate] 🚫--------------------------------------- --\x3e\r\n\r\n## Donate \r\n\r\nIf this project helped you, please consider buying me a coffee or sponsoring me. Your support is much appreciated!\r\n\r\n<a href="https://ko-fi.com/justinmahar"><img src="https://img.shields.io/static/v1?label=Buy%20me%20a%20coffee&message=%E2%9D%A4&logo=KoFi&color=%23fe8e86" alt="Buy me a coffee" /></a>&nbsp;<a href="https://github.com/sponsors/justinmahar" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86" alt="Sponsor"/></a>\r\n\r\n\x3c!-- [/lock:donate] ---------------------------------------🚫 --\x3e\r\n\n## Table of Contents \n\n- [Documentation](#documentation)\n- [Overview](#overview)\n  - [Features include:](#features-include)\n- [Donate](#donate)\n- [Table of Contents](#table-of-contents)\n- [Installation](#installation)\n- [Quick Start](#quick-start)\n    - [Basic Usage](#basic-usage)\n    - [Providing A Default Value](#providing-a-default-value)\n    - [Namespacing Using Prefix](#namespacing-using-prefix)\n      - [Namespacing Using User IDs](#namespacing-using-user-ids)\n    - [Clearing The Value](#clearing-the-value)\n    - [Accessing The Prefixed Key](#accessing-the-prefixed-key)\n    - [Additional Options \\& Uses](#additional-options--uses)\n- [TypeScript](#typescript)\n- [Icon Attribution](#icon-attribution)\n- [Contributing](#contributing)\n- [⭐ Found It Helpful? Star It!](#-found-it-helpful-star-it)\n- [License](#license)\n\n## Installation\n\n```\nnpm i react-storage-complete\n```\n\n## Quick Start\n\n| Use this hook...                                                                                                     | For this Storage API...                                                                    | Storage Description                                                                                                                                      |\n| -------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [useLocalStorage](https://justinmahar.github.io/react-storage-complete/?path=/story/hooks-uselocalstorage--docs)     | [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage)     | The `localStorage` object stores data with no expiration date. The data is not deleted when the browser is closed, and is available for future sessions. |\n| [useSessionStorage](https://justinmahar.github.io/react-storage-complete/?path=/story/hooks-usesessionstorage--docs) | [`sessionStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage) | The `sessionStorage` object stores data for only one session. The data is deleted when the browser is closed.                                            |\n\n#### Basic Usage\n\n```jsx\nimport { useLocalStorage } from \'react-storage-complete\';\nimport { useSessionStorage } from \'react-storage-complete\';\n```\n\n> Both `useLocalStorage` and `useSessionStorage` share the same interface and are interchangeable.\n\nIn your component or hook:\n\n```jsx\nconst [name, setName] = useLocalStorage(\'name\');\n```\n\nThis will store and retrieve the value using the `name` key in `localStorage`. \n\n> Note: If using TypeScript, you can provide a value type like so: `useLocalStorage<string>(\'name\')`.\n\n#### Providing A Default Value\n\nYou can also provide a default value for when the stored value is `undefined` (not currently set in `localStorage`):\n\n```jsx\nconst [name, setName] = useLocalStorage(\'name\', \'Guest\');\n```\n\nIn this example, when the stored item with the key `name` is `undefined`, the `name` value will be `Guest`. \n\n> Note: When a value is `null` in storage, `null` is returned, not the provided default.\n\n#### Namespacing Using Prefix\n\nYou can namespace stored items using a prefix:\n\n```jsx\nconst [name, setName] = useLocalStorage(\'name\', \'Guest\', {\n  prefix: \'my-namespace\',\n});\n```\n\nFor example, by using a user ID as the prefix, you can scope the stored data to the user and avoid mixing settings.\n\nAbove, the key for the value would be `my-namespace.name`.\n\n##### Namespacing Using User IDs\n\nWith `react-storage-complete`, managing stored data for multiple user accounts in the same browser is easy.\n\n```jsx\nconst [name, setName, initialized] = useLocalStorage(\'name\', \'Guest\', {\n  prefix: user?.id, // Undefined until user ID is available as a namespace\n  shouldInitialize: !!user?.id, // Only initialize when user ID is available\n});\n```\n\nAs shown above, you can delay initialization of the stored value until your prefix is available and ready to use as the namespace. \n\nFor example, a user ID may not be ready until logged in, but you may still be calling the hook in your app before that happens.\n\nIn this example:\n- `initialized` will be `false` until the `user.id` is loaded and ready to use as the prefix.\n- When `shouldInitialize` is `true`, the prefix is used with the key to retrieve the stored value from `localStorage`. \n- Then, `initialized` will return as `true`, and your value will be ready to use!\n\n#### Clearing The Value\n\n```jsx\nconst [name, setName, initialized, clear] = useLocalStorage(\'name\', \'Guest\');\n```\n\nYou can clear any stored value and completely remove it from storage using the returned clear function. \n\nIn this example, calling `clear()` will delete the item from storage. You can also call `setName(undefined)` to achieve the same result.\n\n#### Accessing The Prefixed Key\n\n```jsx\nconst [food, setFood, initialized, clear, prefixedKey] = useLocalStorage(\'food\', \'Hamburger\', {\n  prefix: \'my-namespace\',\n});\n```\n\nThe hook also returns the prefixed key, in case you want direct access to it. \n\nIn the example above, the prefixed key would be `my-namespace.food`. \n\n> You can customize the separator by providing the `prefixSeparator` option.\n\n#### Additional Options & Uses\n\nSee the documentation for additional options and uses:\n\n- [useLocalStorage documentation](https://justinmahar.github.io/react-storage-complete/?path=/story/hooks-uselocalstorage--docs)\n- [useSessionStorage documentation](https://justinmahar.github.io/react-storage-complete/?path=/story/hooks-usesessionstorage--docs)\n\n\x3c!-- [lock:typescript] 🚫--------------------------------------- --\x3e\r\n\r\n## TypeScript\r\n\r\nType definitions have been included for [TypeScript](https://www.typescriptlang.org/) support.\r\n\r\n\x3c!-- [/lock:typescript] ---------------------------------------🚫 --\x3e\r\n\n\x3c!-- [lock:icon] 🚫--------------------------------------- --\x3e\r\n\r\n## Icon Attribution\r\n\r\nFavicon by [Twemoji](https://github.com/twitter/twemoji).\r\n\r\n\x3c!-- [/lock:icon] ---------------------------------------🚫 --\x3e\r\n\n\x3c!-- [lock:contributing] 🚫--------------------------------------- --\x3e\r\n\r\n## Contributing\r\n\r\nOpen source software is awesome and so are you. 😎\r\n\r\nFeel free to submit a pull request for bugs or additions, and make sure to update tests as appropriate. If you find a mistake in the docs, send a PR! Even the smallest changes help.\r\n\r\nFor major changes, open an issue first to discuss what you\'d like to change.\r\n\r\n\x3c!-- [/lock:contributing] --------------------------------------🚫 --\x3e\n\n## ⭐ Found It Helpful? [Star It!](https://github.com/justinmahar/react-storage-complete/stargazers)\n\nIf you found this project helpful, let the community know by giving it a [star](https://github.com/justinmahar/react-storage-complete/stargazers): [👉⭐](https://github.com/justinmahar/react-storage-complete/stargazers)\n\n## License\n\nSee [LICENSE.md](https://justinmahar.github.io/react-storage-complete/?path=/docs/license--docs).';var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.Qb,{title:"Home"}),"\n",(0,jsx_runtime.jsx)(blocks_dist.Ih,{children:READMEraw_namespaceObject})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Home",tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.MN)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}};const _1_README_stories=componentMeta,__namedExportsOrder=["__page"]},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);